[tool.coverage.run]
# relative_files = true

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
]

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "testing",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
testing = ["pytest", "hypothesis"]

[tool.mypy]
exclude = "^docs/"

[tool.pyright]
typeCheckingMode = "basic"
exclude = [
  "docs/*",
]
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
log_level = "INFO"
log_format = "[%(levelname)7s] [%(processName)s] %(name)s %(message)s"
log_cli_format = "[%(levelname)7s] %(asctime)s [%(processName)s] %(name)s %(message)s"
log_file_format = "[%(levelname)7s] %(asctime)s [%(processName)s] %(name)s %(message)s"
log_file_level = "DEBUG"
addopts = "--import-mode=importlib --benchmark-skip"
doctest_plus = true
doctest_subpackage_requires = [
  "lenskit-hpf/lenskit/* = hpfrec",
]
filterwarnings = [
  "ignore:::pyarrow[.*]",
  "ignore:.*matrix subclass.*:PendingDeprecationWarning",
  "ignore:.*np.asscalar.*:DeprecationWarning",
  "ignore:.*deprecated create function*:DeprecationWarning",
  "ignore:.*importing the ABCs*:DeprecationWarning",
  "ignore:.*use_ratings option.*:UserWarning",
  "ignore:.*tensor support is in beta state.*:UserWarning",
]
markers = [
  "eval: mark the test as running the evaluator over custom data",
  "slow: mark the test as taking a larger-than-usual amount of time",
  "realdata: mark the test as using a real data set like ML-20M",
]
