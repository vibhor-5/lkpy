name: Test Suite
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  conda:
    name: Conda Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python:
        - 3.6
        - 3.7
        - 3.8
        platform:
        - macos
        - windows
        - ubuntu
    steps:
      - uses: actions/checkout@v2

      - name: Prepare Conda environment
        shell: bash
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate base
          if [ $RUNNER = Linux -a $PYVER = 3.8 ]; then
            echo "Using all extras"
            e_opts="-A"
          else
            echo "Using basic test deps"
            e_opts="-E dev,test"
          fi
          python setup.py dep_info --conda-env environment.yml $e_opts
        env:
          RUNNER: ${{runner.os}}
          PYVER: ${{matrix.python}}
          
      - uses: ./.github/actions/conda-env
        with:
          name: lkpy
          env-file: environment.yml
          python-version: ${{matrix.python}}

      - name: Inspect environment
        run: |
          python -V
          conda info
          numba -s

      - name: Cache ML data
        uses: actions/cache@v2
        with:
          path: |
            ml-100k
            data
            !data/*.zip
          key: ${{runner.os}}-py${{matrix.python}}-mldata
      
      - name: Download ML-100K
        shell: pwsh
        run: |
          ./fetch-datasets.ps1 ml-100k
        
      - name: Download Other ML
        if: runner.os == 'Linux' && matrix.python == 3.8
        shell: pwsh
        run: |
          ./fetch-datasets.ps1 ml-1m ml-10m ml-20m
      
      - name: Build LKPY
        run: |
          mkdir -p build
          python setup.py build_helper || exit 2
          python setup.py build
      
      - name: Test LKPY
        run: |
          python -m pytest --cov=lenskit --verbose
        env:
          MKL_THREADING_LAYER: tbb
          NUMBA_NUM_THREADS: 4
          MKL_NUM_THREADS: 1
      
      - name: Non-JIT Test Coverage
        if: runner.os == 'Linux'
        env:
          NUMBA_DISABLE_JIT: 1
        run: |
          python -m pytest --cov=lenskit --cov-append -m 'not slow'

      - name: Aggreagate Coverage Data
        run: coverage xml

      - uses: codecov/codecov-action@v1
     
      - name: Validate Documentation Examples
        if: runner.os == 'Linux'
        run: |
          cp -r data/ml-100k doc
          cp -r ml-latest-small doc
          export PYTHONPATH="$PWD"
          python -m pytest --nbval-lax doc

  vanilla:
    name: Vanilla Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      matrix:
        python:
        - 3.6
        - 3.7
        - 3.8
        platform:
        - windows
        - ubuntu
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python}}
          architecture: x64

      - name: Set up Python deps
        env:
          PIP_PREFER_BINARY: 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov pytest-doctestplus
          python -m pip install -e .

      - name: Run tests
        run: |
          python -m pytest --cov=lenskit --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  mindep:
    name: Minimal Supported Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: x64

      - name: Set up Python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov pytest-doctestplus
          python -m pip install -c min-constraints.txt -e .

      - name: Run tests
        run: |
          python -m pytest --cov=lenskit --cov-report=xml
        
      - name: Upload coverage
        uses: codecov/codecov-action@v1
