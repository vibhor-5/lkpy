name: Test Suite
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  conda:
    name: Conda Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      fail-fast: false
      matrix:
        python:
        - 3.6
        - 3.7
        - 3.8
        platform:
        - macos
        - windows
        - ubuntu
    steps:
      - uses: actions/checkout@v2
      
      - uses: ./.github/actions/conda-env
        with:
          name: lkpy
          env-file: environment.yml
          python-version: ${{matrix.python}}

      - name: Remove unusable Mac packages
        if: runner.os == 'macOS'
        run: conda remove -qy hpfrec || true

      - name: Inspect environment
        run: |
          python -V
          conda info
          numba -s
      
      - name: Download ML-100K
        if: runner.os != 'Windows'
        run: |
          if [ ! -r ml-100k/u.data ]; then
            wget --no-verbose -O ml-100k.zip http://files.grouplens.org/datasets/movielens/ml-100k.zip
            unzip ml-100k.zip
          fi
      
      - name: Build LKPY
        run: |
          mkdir -p build
          python setup.py build_helper || exit 2
          python setup.py build
      
      - name: Test LKPY
        run: |
          python -m pytest --cov=lenskit --verbose
      
      - name: Non-JIT Test Coverage
        if: runner.os == 'Linux'
        env:
          NUMBA_DISABLE_JIT: 1
        run: |
          python -m pytest --cov=lenskit --cov-append -m 'not slow'

      - name: Aggreagate Coverage Data
        run: coverage xml

      - uses: codecov/codecov-action@v1
     
      - name: Validate Documentation Examples
        if: runner.os == 'Linux'
        run: |
          cp -r ml-100k doc
          cp -r ml-latest-small doc
          export PYTHONPATH="$PWD"
          python -m pytest --nbval-lax doc

  vanilla:
    name: Vanilla Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      matrix:
        python:
        - 3.6
        - 3.7
        - 3.8
        platform:
        - windows
        - ubuntu
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python}}
          architecture: x64

      - name: Set up Python deps
        env:
          PIP_PREFER_BINARY: 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov pytest-doctestplus
          python -m pip install -e .

      - name: Run tests
        run: |
          python -m pytest --cov=lenskit --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  tox:
    name: Minimal Supported Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: x64

      - name: Set up base Python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Set up environment
        run: |
          python -m tox -e minimal --notest
        
      - name: Run tests
        run: |
          python -m tox -e minimal -- --cov=lenskit --cov-report=xml
        
      - name: Upload coverage
        uses: codecov/codecov-action@v1
